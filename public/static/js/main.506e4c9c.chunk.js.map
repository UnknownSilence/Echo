{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isFetched1","isFetched2","isFetched3","isFetched4","isFetched5","isFetched6","isFetched7","class1Grade","class2Grade","class3Grade","class4Grade","class5Grade","class6Grade","class7Grade","per1Num","per2Num","per3Num","per4Num","per5Num","per6Num","per7Num","require","skyward","scrapeReport","then","_ref","studData","data","console","log","per1","course","per2","per3","per4","per5","per6","per7","setState","_this2","timerID","setInterval","tick","clearInterval","scraper","user","pass","scrapeGradebook","bucket","_ref2","gradeData","grade","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","react_default","a","createElement","className","src","logo","alt","href","target","rel","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.506e4c9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport firebase from \"firebase\"\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyA9_Kfh5qE6_0F4Md0DpnPd6ZMgG7W80oI\",\n  authDomain: \"echogrades.firebaseapp.com\",\n  databaseURL: \"https://echogrades.firebaseio.com\",\n  projectId: \"echogrades\",\n  storageBucket: \"\",\n  messagingSenderId: \"57021306093\"\n};\nfirebase.initializeApp(config);\n\n\n\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetched1: false,\n      isFetched2: false,\n      isFetched3: false,\n      isFetched4: false,\n      isFetched5: false,\n      isFetched6: false,\n      isFetched7: false,\n      class1Grade: 0,\n      class2Grade: 0,\n      class3Grade: 0,\n      class4Grade: 0,\n      class5Grade: 0,\n      class6Grade: 0,\n      class7Grade: 0,\n      per1Num: 0,\n      per2Num: 0,\n      per3Num: 0,\n      per4Num: 0,\n      per5Num: 0,\n      per6Num: 0,\n      per7Num: 0\n    }\n\n\n\n    const skyward = require('skyward-rest')\n\n    const url = 'https://skyward.kleinisd.net/scripts/wsisa.dll/WService=wsEAplus/seplog01.w';\n\n    const scraper = skyward(url); // the scraper!\n\n    const user = 's606417';\n    const pass = 'UnknownSilence1';\n\n    scraper.scrapeReport(user, pass)\n      .then(({ data }) => {\n        var studData = (data)\n        console.log(studData)\n        var per1 = studData[1].course\n        var per2 = studData[2].course\n        var per3 = studData[3].course\n        var per4 = studData[4].course\n        var per5 = studData[5].course\n        var per6 = studData[6].course\n        var per7 = studData[7].course\n        this.setState({\n          per1Num: per1,\n          per2Num: per2,\n          per3Num: per3,\n          per4Num: per4,\n          per5Num: per5,\n          per6Num: per6,\n          per7Num: per7\n\n        })\n        console.log(this.state.per1Num)\n        console.log(this.state.per2Num)\n        console.log(this.state.per3Num)\n        console.log(this.state.per4Num)\n        console.log(this.state.per5Num)\n        console.log(this.state.per6Num)\n        console.log(this.state.per7Num)\n\n        this.setState({\n          isFetched1: true,\n          isFetched2: true,\n          isFetched3: true,\n          isFetched4: true,\n          isFetched5: true,\n          isFetched6: true,\n          isFetched7: true\n        })\n\n\n      });\n\n\n\n\n\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n\n\n    const skyward = require('skyward-rest')\n\n    const url = 'https://skyward.kleinisd.net/scripts/wsisa.dll/WService=wsEAplus/seplog01.w';\n\n    const scraper = skyward(url); // the scraper!\n\n    const user = 's606417';\n    const pass = 'UnknownSilence1';\n\n\n    if ((this.state.isFetched1) === true) {\n      console.log(\"fetched 1\")\n      scraper.scrapeGradebook(user, pass, { course: this.state.per1Num, bucket: 'TERM 1' })\n        .then(({ data }) => {\n          let gradeData = data // gradebook\n          //alert(gradeData.gradebook[1].assignments[0]);\n          console.log(gradeData.grade);\n        });\n      this.setState({\n        isFetched1: false,\n\n      })\n\n    }\n    else if ((this.state.isFetched2) === true) {\n      console.log(\"fetched 2\")\n      scraper.scrapeGradebook(user, pass, { course: this.state.per2Num, bucket: 'TERM 1' })\n        .then(({ data }) => {\n          let gradeData = data // gradebook\n          //alert(gradeData.gradebook[1].assignments[0]);\n          console.log(gradeData.grade);\n        });\n      this.setState({\n        isFetched2: false,\n\n      })\n\n    }\n    else if ((this.state.isFetched3) === true) {\n      console.log(\"fetched 3\")\n      scraper.scrapeGradebook(user, pass, { course: this.state.per3Num, bucket: 'TERM 1' })\n        .then(({ data }) => {\n          let gradeData = data // gradebook\n          //alert(gradeData.gradebook[1].assignments[0]);\n          console.log(gradeData.grade);\n        });\n      this.setState({\n        isFetched3: false,\n\n      })\n\n    }\n\n    else if ((this.state.isFetched4) === true) {\n      console.log(\"fetched 4\")\n      scraper.scrapeGradebook(user, pass, { course: this.state.per4Num, bucket: 'TERM 1' })\n        .then(({ data }) => {\n          let gradeData = data // gradebook\n          //alert(gradeData.gradebook[1].assignments[0]);\n          console.log(gradeData.grade);\n        });\n      this.setState({\n        isFetched4: false,\n\n      })\n\n    }\n\n    else if ((this.state.isFetched5) === true) {\n      console.log(\"fetched 5\")\n      scraper.scrapeGradebook(user, pass, { course: this.state.per5Num, bucket: 'TERM 1' })\n        .then(({ data }) => {\n          let gradeData = data // gradebook\n          //alert(gradeData.gradebook[1].assignments[0]);\n          console.log(gradeData.grade);\n        });\n      this.setState({\n        isFetched5: false,\n\n      })\n\n    }\n\n    else if ((this.state.isFetched6) === true) {\n      console.log(\"fetched 6\")\n      scraper.scrapeGradebook(user, pass, { course: this.state.per6Num, bucket: 'QUARTER 1' })\n        .then(({ data }) => {\n          let gradeData = data // gradebook\n          //alert(gradeData.gradebook[1].assignments[0]);\n          console.log(gradeData.grade);\n        });\n      this.setState({\n        isFetched6: false,\n\n      })\n\n    }\n\n    else if ((this.state.isFetched7) === true) {\n      console.log(\"fetched 7\")\n      scraper.scrapeGradebook(user, pass, { course: this.state.per7Num, bucket: 'TERM 1' })\n        .then(({ data }) => {\n          let gradeData = data // gradebook\n          //alert(gradeData.gradebook[1].assignments[0]);\n          console.log(gradeData.grade);\n        });\n      this.setState({\n        isFetched7: false,\n\n      })\n\n    }\n\n\n    else {\n      console.log(\"awaiting\")\n    }\n\n\n\n\n\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}